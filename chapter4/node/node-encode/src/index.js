import * as tf from '@tensorflow/tfjs-node'
import * as fs from 'fs'

tf.tidy(() => {
  const bigMess = tf.randomUniform([400, 400, 3], 0, 255)
  tf.node.encodeJpeg(bigMess).then((f) => {
    fs.writeFileSync('simple.jpg', f)
    console.log("Basic JPG 'simple.jpg' written")
  })

  tf.node
    .encodeJpeg(
      bigMess,
      'rgb', // format
      90,    // quality
      true,  // progressive
      true,  // optimizeSize
      true,  // chromaSubsampling
      'cm',  // densityUnit
      250,   // xDensity
      250,   // yDensity
      'Generated by TFJS Node!' // xmpMetadata
    )
    .then((f) => {
      fs.writeFileSync('advanced.jpg', f)
      console.log("Full featured JPG 'advanced.jpg' written")
    })

  tf.node.encodePng(bigMess).then((f) => {
    fs.writeFileSync('simple.png', f)
    console.log("Basic PNG 'simple.png' written")
  })

  tf.node.encodePng(bigMess, 9).then((f) => {
    fs.writeFileSync('advanced.png', f)
    console.log("Full featured PNG 'advanced.png' written")
  })
})

console.log(tf.memory().numTensors)
